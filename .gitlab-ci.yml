# Currently, we run all test configurations concurrently to optimize for the usual (non failing) case.
# We could also run the debug tests first and abort the entire pipeline if they fail to shorten the build but
# IMHO we would not gain enough speedup to justify the regression in all other cases.
stages:
- test
- build
- deploy
test:clang:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=clang
  - export CXX=clang++
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DQUBUS_BUILD_TESTS=ON -DQUBUS_UTIL_BUILD_TESTS=ON -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make
  - ctest -E cuda --output-on-failure
  stage: test
  tags:
  - docker

test:gcc:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DQUBUS_BUILD_TESTS=ON -DQUBUS_UTIL_BUILD_TESTS=ON -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make
  - ctest -E cuda --output-on-failure
  stage: test
  tags:
  - docker

test:clang:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=clang
  - export CXX=clang++
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DHPX_DIR=/opt/hpx-debug/lib/cmake/HPX -DQUBUS_BUILD_TESTS=ON -DQUBUS_UTIL_BUILD_TESTS=ON -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make
  - ctest -E cuda --output-on-failure
  stage: test
  tags:
  - docker

test:gcc:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc
  - export CXX=g++
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug  -DHPX_DIR=/opt/hpx-debug/lib/cmake/HPX -DQUBUS_BUILD_TESTS=ON -DQUBUS_UTIL_BUILD_TESTS=ON -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make
  - ctest --output-on-failure
  stage: test
  tags:
  - docker
  - cuda

test:ubuntu:gcc:release:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc-7
  - export CXX=g++-7
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DQUBUS_BUILD_TESTS=ON -DQUBUS_UTIL_BUILD_TESTS=ON -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make
  - ctest -E cuda --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-ci
  tags:
  - docker

test:ubuntu:gcc:debug:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - export CC=gcc-7
  - export CXX=g++-7
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug  -DHPX_DIR=/opt/hpx-debug/lib/cmake/HPX -DQUBUS_BUILD_TESTS=ON -DQUBUS_UTIL_BUILD_TESTS=ON -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make
  - ctest -E cuda --output-on-failure
  stage: test
  image: localhost:5000/td-quantum/ubuntu-ci
  tags:
  - docker

# We need to separate the doc build and deploy steps. Otherwise the documentation build itself
# might fail but the (incomplete) documentation would still be deployed.
build:doc:
  script:
  - "sudo chown -R `whoami`: ."
  - git submodule update --init
  - ls -la
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make doc
  stage: build
  tags:
  - docker
  - doc
  only:
  - master
  artifacts:
    paths:
    - build/
    expire_in: 1 day
deploy:doc:
  script:
  - "sudo chown -R `whoami`: ."
  - cd build
  - rsync -az --delete qubus/doc/html/* ssh-523024-chinz@qubusproject.org:webseiten/doc
  stage: deploy
  environment:
    name: documentation
    url: https://qbbproject.org/
  tags:
  - docker
  - doc
  only:
  - master
  dependencies:
  - build:doc

deploy:source_code:
  script:
  - "sudo chown -R `whoami`: ."
  - ./install_ci_dependencies.sh
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=Release -DHPX_IGNORE_COMPILER_COMPATIBILITY=ON ../
  - make package_source
  - rsync -az --delete *-src.tar.bz2 *-src.tar.gz *-src.tar.xz *-src.tar.Z ssh-523024-chinz@qubusproject.org:webseiten/downloads/src
  stage: deploy
  environment:
    name: source code
    url: https://qbbproject.org/
  tags:
  - docker
  only:
  - master
  artifacts:
    paths:
    - build/*-src.tar.bz2
    - build/*-src.tar.gz
    - build/*-src.tar.xz
    - build/*-src.tar.Z
    expire_in: 1 day
  dependencies: []